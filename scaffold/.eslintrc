{
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.json"
  },
  "settings": {
    "import/resolver": {
      "typescript": {}
    }
  },
  "extends": [
    "airbnb-typescript/base",
    "eslint:recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:prettier/recommended"
  ],
  "plugins": ["@typescript-eslint", "import"],
  "rules": {
    "import/no-extraneous-dependencies": [
      "error",
      {
        "devDependencies": ["**/*.test.ts", "**/*.spec.ts"]
      }
    ],
    "import/prefer-default-export": 0,
    "no-underscore-dangle": 0,
    "no-cond-assign": ["error", "except-parens"],
    "import/no-cycle": 0,
    "@typescript-eslint/interface-name-prefix": 0,
    "@typescript-eslint/no-unused-vars": 1,
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "default",
        "format": ["camelCase"]
      },
      {
        "selector": "variable",
        "format": null,
        "filter": {
          "regex": ".*(resolveReference|resolveType)$",
          "match": true
        }
      },
      {
        "selector": "property",
        "format": null,
        "filter": {
          "regex": ".*(typename)$",
          "match": true
        }
      },
      {
        "selector": "variable",
        "format": ["camelCase", "UPPER_CASE", "PascalCase"]
      },
      {
        "selector": "typeLike",
        "format": ["PascalCase"]
      }
    ]
  },
  "overrides": [
    {
      "files": ["generated/graphql/**/*"],
      "rules": {
        "@typescript-eslint/naming-convention": "off"
      }
    },
    {
      "files": ["src/**/*.spec.ts", "src/**/*.test.ts"],
      "plugins": ["jest"],
      "extends": ["plugin:jest/recommended"],
      "rules": {
        "jest/expect-expect": [
          "error",
          {
            "assertFunctionNames": ["expect", "td.verify"]
          }
        ]
      }
    }
  ],
  "env": {
    "browser": true,
    "jest": true
  }
}
